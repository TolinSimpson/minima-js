export {createElement,useState,useEffect,render} from '../lib/minima-core.js';export {html,loadTemplate,sanitizeText} from '../lib/minima-template.js';export {defineComponent,withProps,compose,Fragment,memo} from '../lib/minima-component.js';export {renderToString,hydrate,preloadComponent,ssrData,injectSSRData} from '../lib/minima-ssr.js';export {quickForm,quickList,quickModal,quickCard,quickTable,$,$div,$span,$p,$button,$input,$form,$h1,$h2,$h3,createApp as llmCreateApp,safeRender,safeComponent,tryRender,page,builder} from '../lib/minima-llm.js';export {h,div,span,p,button,input,a,img,form,ul,li,h1,h2,h3,useState,useEffect,component,fc,memo as memoize,t,css,mount,app,click,submit,change,style,className,id,props,attr,when,unless,each,onMount,onUpdate,onDestroy,toggle,counter,inputState,formState,fade,slide,route,link,context,debug,log} from '../lib/minima-api.js';export const version='1.0.0';export const features=['Virtual DOM with Hooks','Modern Component API','Composition Patterns','XSS-Safe Templates','Built-in SSR/Hydration','Zero Dependencies','TypeScript Support','Shortest API Syntax'];export const createApp=(rootComponent,container)=> {const target=typeof container==='string'?document.getElementById(container)||document.querySelector(container):container;if(!target)throw new Error('createApp:Container not found');render(createElement(rootComponent),target);return {container:target,component:rootComponent,unmount:()=> {target.innerHTML='';}};};export const $=(component,target='app')=> createApp(component,target);
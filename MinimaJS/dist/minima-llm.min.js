import{h,div,span,p,button,input,a,img,form,ul,li,h1,h2,h3,useState,useEffect,component,fc,memo,t,css,render,mount,app,click,submit,change,style,className,id,props,attr,when,unless,each,onMount,onUpdate,onDestroy,toggle,counter,inputState,formState,fade,slide,route,link,context,debug,log}from './minima-api.js';const quickForm=(config)=>{const[values,updateValue,resetForm]=formState(config.initialValues||{});const fields=config.fields.map(field=>{const fieldName=typeof field==='string'?field:field.name;const fieldType=typeof field==='string'?'text':field.type||'text';const fieldLabel=typeof field==='string'?field:field.label||fieldName;return div({className:'form-field'},[p(fieldLabel+':'),input({type:fieldType,value:values[fieldName]||'',onChange:updateValue(fieldName),placeholder:fieldLabel})]);});return form({...submit(e=>{e.preventDefault();if(config.onSubmit)config.onSubmit(values);})},[...fields,div({className:'form-actions'},[button('Submit'),when(config.showReset,button({onClick:resetForm},'Reset'))])]);};const quickList=(items,renderItem,options={})=>{const Container=options.ordered?'ol':'ul';return h(Container,{className:options.className},items.map((item,index)=>li({key:item.id||index},renderItem(item,index))));};const quickModal=(isOpen,content,options={})=>{const[show,setShow]=useState(isOpen);useEffect(()=>setShow(isOpen),[isOpen]);return when(show,div({className:'modal-overlay',onClick:()=>options.onClose&&options.onClose()},[div({className:'modal-content',onClick:e=>e.stopPropagation()},[when(options.showClose,button({className:'modal-close',onClick:()=>options.onClose&&options.onClose()},'×')),content])]));};const quickCard=(title,content,actions=[])=>div({className:'card'},[when(title,div({className:'card-header'},h3(title))),div({className:'card-body'},content),when(actions.length,div({className:'card-actions'},actions))]);const quickTable=(data,columns)=>{const headers=columns.map(col=>h('th',col.header||col.key));const rows=data.map((row,index)=>h('tr',{key:row.id||index},columns.map(col=>h('td',col.render?col.render(row[col.key],row):row[col.key]))));return h('table',{className:'data-table'},[h('thead',h('tr',headers)),h('tbody',rows)]);};class ElementBuilder{constructor(tag){this.tag=tag;this.props={};this.children=[];}class(className){this.props.className=className;return this;}text(content){this.children.push(content);return this;}child(...elements){this.children.push(...elements);return this;}onClick(handler){this.props.onClick=handler;return this;}onChange(handler){this.props.onChange=handler;return this;}onSubmit(handler){this.props.onSubmit=handler;return this;}style(styles){this.props.style=styles;return this;}attr(name,value){this.props[name]=value;return this;}when(condition){return condition?this:new NullBuilder();}build(){return h(this.tag,this.props,...this.children);}}class NullBuilder extends ElementBuilder{constructor(){super(null);}build(){return null;}class(){return this;}text(){return this;}child(){return this;}onClick(){return this;}onChange(){return this;}onSubmit(){return this;}style(){return this;}attr(){return this;}when(){return this;}}const $=(tag)=>new ElementBuilder(tag);const $div=()=>new ElementBuilder('div');const $span=()=>new ElementBuilder('span');const $p=()=>new ElementBuilder('p');const $button=()=>new ElementBuilder('button');const $input=()=>new ElementBuilder('input');const $form=()=>new ElementBuilder('form');const $h1=()=>new ElementBuilder('h1');const $h2=()=>new ElementBuilder('h2');const $h3=()=>new ElementBuilder('h3');const createApp={todo:(config={})=>{const[todos,setTodos]=useState(config.initialTodos||[]);const[input,setInput]=useState('');const addTodo=()=>{if(input.trim()){setTodos([...todos,{id:Date.now(),text:input,done:false}]);setInput('');}};return div({className:'todo-app'},[h1('Todo App'),div({className:'todo-input'},[input({value:input,onChange:e=>setInput(e.target.value),placeholder:'Add new todo...',onKeyPress:e=>e.key==='Enter'&&addTodo()}),button({onClick:addTodo},'Add')]),quickList(todos,todo=>div({className:todo.done?'todo-item done':'todo-item',key:todo.id},[input({type:'checkbox',checked:todo.done,onChange:()=>setTodos(todos.map(t=>t.id===todo.id?{...t,done:!t.done}:t))}),span(todo.text),button({onClick:()=>setTodos(todos.filter(t=>t.id!==todo.id))},'×')]))]);},counter:(config={})=>{const[count,setCount]=useState(config.initialValue||0);const step=config.step||1;const resetValue=config.initialValue||0;return div({className:'counter-app'},[h1(config.title||'Counter'),div({className:'counter-display'},count),div({className:'counter-controls'},[button({onClick:()=>setCount(count-step)},'-'),button({onClick:()=>setCount(resetValue)},'Reset'),button({onClick:()=>setCount(count+step)},'+')])]);},dashboard:(config)=>{const{header,sidebar,widgets}=config;return div({className:'dashboard'},[when(header,div({className:'dashboard-header'},header)),div({className:'dashboard-content'},[when(sidebar,div({className:'dashboard-sidebar'},sidebar)),div({className:'dashboard-main'},widgets?.map((widget,index)=>div({className:'dashboard-widget',key:index},widget)))])]);}};const safeRender=(component,target)=>{try{if(typeof target==='string'){target=document.getElementById(target)||document.querySelector(target);}if(!target){console.warn('safeRender:Target element not found,creating div');target=document.createElement('div');document.body.appendChild(target);}return render(component,target);}catch(e){console.error('Render error:',e);return render(div({className:'error-boundary'},[h2('Render Error'),p(`Error:${e.message}`),button({onClick:()=>location.reload()},'Reload Page')]),target);}};const safeComponent=(componentFn)=>{return(...args)=>{try{return componentFn(...args);}catch(e){console.error('Component error:',e);return div({className:'component-error'},[h3('Component Error'),p(`${e.message}`)]);}};};const tryRender=(components)=>{for(const component of components){try{return component();}catch(e){console.warn('Component failed,trying next:',e.message);}}return div('All components failed to render');};class PageBuilder{constructor(){this.headerContent=null;this.mainContent=null;this.footerContent=null;this.sidebarContent=null;}header(builder){this.headerContent=typeof builder==='function'?builder(new NavBuilder()):builder;return this;}main(builder){this.mainContent=typeof builder==='function'?builder(new SectionBuilder()):builder;return this;}sidebar(content){this.sidebarContent=content;return this;}footer(builder){this.footerContent=typeof builder==='function'?builder(new FooterBuilder()):builder;return this;}build(){return div({className:'page-layout'},[when(this.headerContent,h('header',{className:'page-header'},this.headerContent)),div({className:'page-body'},[when(this.sidebarContent,h('aside',{className:'page-sidebar'},this.sidebarContent)),h('main',{className:'page-main'},this.mainContent)]),when(this.footerContent,h('footer',{className:'page-footer'},this.footerContent))]);}}class NavBuilder{constructor(){this.brandText='';this.navLinks=[];}brand(text){this.brandText=text;return this;}links(links){this.navLinks=links;return this;}build(){return h('nav',{className:'navbar'},[when(this.brandText,div({className:'navbar-brand'},this.brandText)),div({className:'navbar-links'},this.navLinks.map(link=>a({href:typeof link==='string'?`#${link}`:link.href},typeof link==='string'?link:link.text)))]);}}class SectionBuilder{constructor(){this.sections=[];}section(content){this.sections.push(content);return this;}build(){return div({className:'main-content'},this.sections);}}class FooterBuilder{constructor(){this.content=[];}text(text){this.content.push(p(text));return this;}links(links){this.content.push(div({className:'footer-links'},links.map(link=>a({href:link.href},link.text))));return this;}build(){return div({className:'footer-content'},this.content);}}const page=()=>new PageBuilder();const builder=()=>new PageBuilder();const llmApi={quickForm,quickList,quickModal,quickCard,quickTable,$,$div,$span,$p,$button,$input,$form,$h1,$h2,$h3,createApp,safeRender,safeComponent,tryRender,page,builder,PageBuilder,NavBuilder,SectionBuilder,FooterBuilder};export{quickForm,quickList,quickModal,quickCard,quickTable,$,$div,$span,$p,$button,$input,$form,$h1,$h2,$h3,createApp,safeRender,safeComponent,tryRender,page,builder,PageBuilder,NavBuilder,SectionBuilder,FooterBuilder};export default llmApi;